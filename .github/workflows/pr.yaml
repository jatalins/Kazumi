---
    name: "PR workflow"

    on:
      pull_request:
        types:
          - opened
          - synchronize
          - reopened
          - ready_for_review
        paths-ignore:
          - 'static/**'
          - '**.md'
          - '.gitignore'
          - '.github/ISSUE_TEMPLATE/**'
          - 'fastlane/**'
      workflow_dispatch:
        inputs:
          logLevel:
            description: 'Log level'
            required: true
            default: 'warning'
          signpath_sign:
            description: 'sign binary by signpath'
            required: false
            default: false
            type: boolean
          run_android:
            description: 'manually run android build'
            required: false
            default: false
            type: boolean
    
    jobs:
      changes:
        if: ${{ ! github.event.pull_request.draft }}
        runs-on: "ubuntu-latest"
        permissions:
          pull-requests: read
        outputs:
          android: ${{ steps.filter.outputs.android }}
          windows: ${{ steps.filter.outputs.windows }}
          ios: ${{ steps.filter.outputs.ios }}
          macos: ${{ steps.filter.outputs.macos }}
          linux: ${{ steps.filter.outputs.linux }}
          all: ${{ steps.filter.outputs.all }}
        steps:
          - uses: actions/checkout@v4
          - uses: dorny/paths-filter@v3
            id: filter
            with:
              predicate-quantifier: 'every'
              filters: |
                android:
                  - 'android/**'
                All:
                  - '!android/**'
  
      flutter-build-android:
        needs: changes
        if: ${{ github.event.inputs.run_android || (! github.event.pull_request.draft && (needs.changes.outputs.android || needs.changes.outputs.all)) }}
        name: "Release for android"
        runs-on: "ubuntu-latest"
        permissions: write-all
        steps:
          - name: Clone repository
            uses: actions/checkout@v4
          - name: Install dependencies
            run: |
              sudo apt-get update
              sudo apt-get install -y clang cmake libgtk-3-dev ninja-build libayatana-appindicator3-dev libasound2-dev
            shell: bash
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
              java-version: '17'
              distribution: 'temurin'          
          - name: Set up Flutter
            uses: subosito/flutter-action@v2.16.0
            with:
              channel: stable
              flutter-version-file: pubspec.yaml
          - name: Get Flutter dependencies
            run: flutter pub get
            shell: bash
          - name: Print Flutter version
            run: flutter doctor -v
            shell: bash
          - name: Build Flutter for Android
            run: flutter build apk --split-per-abi
            shell: bash
          - name: Package android build output
            run: cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk Kazumi_android_${env:tag}_armv7.apk
            shell: bash

          - name: Upload android outputs
            uses: actions/upload-artifact@v4
            with:
              name: android_outputs
              path: Kazumi_android_*.apk
